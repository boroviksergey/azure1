# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '51005cc4-c469-47be-ac00-ea45ad94191e'
  imageRepository: 'kubeimg'
  containerRegistry: 'kubercontainer1.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'kubercontainer11846ead6-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Deploy
  displayName: Deploy stage

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'boroviksergeyazure1-1567.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                cd $(Pipeline.Workspace)
                cd ..
                cd _temp
                ls
          - task: Bash@3
            inputs:
             targetType: 'inline'
             script: 'ls $(Pipeline.Workspace)'
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
          - script: echo "$(Build.SourcesDirectory)" 
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: 
                $(System.DefaultWorkingDirectory)/manifests/deployment.yml
 #               manifests/deployment.yml
 #               $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
